version: 2.1

orbs:
  docker: circleci/docker@2.4.0

jobs:
  build-and-push:
    environment:
      DOCKER_IMAGE: thinhlam159/laravel-docker
      DOCKER_TAG: latest
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: $DOCKER_IMAGE
          tag: $DOCKER_TAG
      - docker/push:
          digest-path: /tmp/digest.txt
          image: $DOCKER_IMAGE
          tag: $DOCKER_TAG
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
  test:
    docker:
      - image: cimg/php:8.2.12
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run:
          name: Install PHP dependencies
          command: composer install --no-interaction --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - vendor
      - restore_cache:
          keys:
            - v1-npm-{{ checksum "package.json" }}
            - v1-npm-
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL CLI
          command: |
            sudo apt-get update
            sudo apt-get install default-mysql-client
      - run:
          name: Set up database
          command: php artisan migrate --env=testing
      - run:
          name: Run PHPUnit tests
          command: ./vendor/bin/phpunit
      - run:
          name: PHP CS
          command: phpcs --standard=PSR12 app

workflows:
  my-pipeline:
    jobs:
      - test
      - build-and-push:
          requires:
            - test
